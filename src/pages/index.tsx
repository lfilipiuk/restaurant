"use client";
import { type NextPage } from "next";
import Head from "next/head";
import Calendar from "../components/Calendar";
import { useState } from "react";
import type { DateTime } from "@types";
import { api } from "../utils/api";
import { formatISO } from "date-fns";
import { prisma } from "../server/db"


interface HomeProps {
    days: Day[]
    closedDays: string[] // ISO string
}

const Home: NextPage<HomeProps> = ({days, closedDays}) => {
  const [date, setDate] = useState<DateTime>({
    justDate: null,
    dateTime: null,
  });

  // tRPC check menu status
  const { isFetchedAfterMount } = api.menu.checkMenuStatus.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <Calendar days={days} closedDays={closedDays} />
      </div>
    </>
  );
};

export async function getServerSideProps() {
  const days = await prisma.day.findMany();
  const closedDays = (await prisma.closedDay.findMany()).map((day) =>
    formatISO(day.date)
  );

  return {
    props: {
      // will be passed to the page component as props
        days,
        closedDays,
    },
  };
}

export default Home;
